"""
介绍decorator
	Python装饰器（Decorator）是一种用于动态修改函数或类的行为的语法结构。
装饰器本质上是一个函数或类，它可以接受一个函数或类作为参数，并返回一个新的函数或类，
新的函数或类通常与原始的函数或类具有相同的名称，但是具有不同的行为。

	装饰器通常用于修改函数的行为，例如在函数执行前或执行后添加一些额外的逻辑，或者缓存函数的结果以提高性能。
装饰器也可以用于添加或修改类的属性和方法，或者在类的初始化过程中执行一些逻辑。

	装饰器的使用非常灵活，可以通过定义自己的装饰器来实现自定义的功能，也可以使用Python内置的装饰器，
如@property、@staticmethod和@classmethod等来简化代码。
装饰器可以嵌套使用，从而实现更复杂的行为修改，但需要注意装饰器的执行顺序和作用范围。
	
"""